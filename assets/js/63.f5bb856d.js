(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{507:function(t,e,a){"use strict";a.r(e);var n=a(2),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一、正则表达式的用途"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、正则表达式的用途"}},[t._v("#")]),t._v(" "),e("strong",[t._v("一、正则表达式的用途")])]),t._v(" "),e("p",[t._v("正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。")]),t._v(" "),e("h2",{attrs:{id:"二、基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、基本用法"}},[t._v("#")]),t._v(" "),e("strong",[t._v("二、基本用法")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.runoob.com/python3/python3-reg-expressions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文档"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("首先，要使用正则表达式，你需要引用一个库")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"正则表达式模式-pattern"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式模式-pattern"}},[t._v("#")]),t._v(" "),e("strong",[t._v("正则表达式模式（pattern）")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("模式")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("^")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字符串的开头。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("$")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字符串的末尾。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v(".")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("[...]")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("用来表示一组字符,单独列出：[amk] 匹配 'a'，'m'或'k'")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("[^...]")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re*")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配0个或多个的表达式。(ab)*表示空字符，ab，abab等")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re+")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配1个或多个的表达式。(ab)+表示ab，abab，ababab等")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re?")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配0个或1个由前面的正则表达式定义的片段，非贪婪模式。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re{ n}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v('精确匹配 n 个前面表达式。例如， o{2} 不能匹配 "Bob" 中的 "o"，但是能匹配 "food" 中的两个 o')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re{ n,}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v('匹配 n 个前面表达式。例如， o{2,} 不能匹配"Bob"中的"o"，但能匹配 "foooood"中的所有 o。"o{1,}" 等价于 "o+"。"o{0,}" 则等价于 "o*"。')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re{ n, m}")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪模式")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("a|b")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配a或b")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(re)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("对正则表达式分组并记住匹配的文本")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?imx)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?-imx)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?: re)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("类似 (...), 但是不表示一个组")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?imx: re)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在括号中使用i, m, 或 x 可选标志")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?-imx: re)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在括号中不使用i, m, 或 x 可选标志")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?#...)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("注释.")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?= re)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("前向肯定界定符。如果所含正则表达式，以 ... 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?! re)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("(?> re)")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配的独立模式，省去回溯。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\w")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字母数字及下划线")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\W")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配非字母数字及下划线")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\s")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任意空白字符，等价于 [ \\t\\n\\r\\f]。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\S")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任意非空字符")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\d")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任意数字，等价于 [0-9].")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\D")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任意非数字")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\A")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字符串开始")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\Z")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\z")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字符串结束")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\G")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配最后匹配完成的位置。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\b")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配一个单词边界，也就是指单词和空格间的位置。例如， 'er\\b' 可以匹配\"never\" 中的 'er'，但不能匹配 \"verb\" 中的 'er'。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\B")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配非单词边界。'er\\B' 能匹配 \"verb\" 中的 'er'，但不能匹配 \"never\" 中的 'er'。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\n, \\t, 等.")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配一个换行符。匹配一个制表符。等")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\1...\\9")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配第n个分组的内容。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("\\10")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配第n个分组的内容，如果它经匹配。否则指的是八进制字符")])])])]),t._v(" "),e("h3",{attrs:{id:"可选标志-flags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可选标志-flags"}},[t._v("#")]),t._v(" "),e("strong",[t._v("可选标志（flags）")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("标志")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re.I")])]),t._v(" "),e("td",[t._v("使匹配对大小写不敏感")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re.L")])]),t._v(" "),e("td",[t._v("做本地化识别（locale-aware）匹配")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re.M")])]),t._v(" "),e("td",[t._v("多行匹配，影响 ^ 和 $")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re.S")])]),t._v(" "),e("td",[t._v("使 . 匹配包括换行在内的所有字符")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re.U")])]),t._v(" "),e("td",[t._v("根据Unicode字符集解析字符。这个标志影响 \\w, \\W, \\b, \\B")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("re.X")])]),t._v(" "),e("td",[t._v("该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。")])])])]),t._v(" "),e("h3",{attrs:{id:"一些函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一些函数"}},[t._v("#")]),t._v(" 一些函数")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("re.match")]),e("br"),t._v(" "),e("strong",[t._v("函数原型")]),t._v("：re.match(pattern, string, flags=0)"),e("br"),t._v(" "),e("strong",[t._v("解释")]),t._v("：re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("re.search")]),e("br"),t._v(" "),e("strong",[t._v("函数原型")]),t._v("：re.search(pattern, string, flags=0)"),e("br"),t._v(" "),e("strong",[t._v("解释")]),t._v("：re.search 扫描整个字符串并返回第一个成功的匹配。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("re.compile")]),e("br"),t._v(" "),e("strong",[t._v("函数原型")]),t._v("：re.compile(pattern，flags)"),e("br"),t._v(" "),e("strong",[t._v("解释")]),t._v("：compile 函数用于编译正则表达式，生成一个正则表达式（ Pattern ）对象，供 match() 和 search() 这两个函数使用。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("re.findall")]),e("br"),t._v(" "),e("strong",[t._v("函数原型")]),t._v(": re.findall(pattern, string, flags=0)"),e("br"),t._v(" "),e("strong",[t._v("解释")]),t._v("：在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果有多个匹配模式，则返回元组列表，如果没有找到匹配的，则返回空列表。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("re.sub")]),e("br"),t._v(" "),e("strong",[t._v("函数原型")]),t._v(": re.sub(pattern, repl, string, count=0, flags=0)"),e("br"),t._v(" "),e("strong",[t._v("解释")]),t._v("：前三个参数必选。pattern : 正则中的模式字符串。\nrepl : 替换的字符串，也可为一个函数。\nstring : 要被查找替换的原始字符串。\ncount : 模式匹配后替换的最大次数，默认 0 表示替换所有的匹配。\nflags : 编译时用的匹配模式，数字形式。")])])]),t._v(" "),e("h3",{attrs:{id:"输出对象的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输出对象的方法"}},[t._v("#")]),t._v(" 输出对象的方法")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("group([group1, …])")]),e("br"),t._v("\n用于获得一个或多个分组匹配的字符串，当要获得整个匹配的子串时，可直接使用 group() 或 group(0)；")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("start([group])")]),e("br"),t._v("\n方法用于获取分组匹配的子串在整个字符串中的起始位置（子串第一个字符的索引），参数默认值为 0；")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("end([group])")]),e("br"),t._v("\n方法用于获取分组匹配的子串在整个字符串中的结束位置（子串最后一个字符的索引+1），参数默认值为 0；")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("span([group])")]),e("br"),t._v("\n方法返回 (start(group), end(group))。")])])]),t._v(" "),e("h2",{attrs:{id:"三、实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、实例"}},[t._v("#")]),t._v(" "),e("strong",[t._v("三、实例")])]),t._v(" "),e("p",[t._v("注释是对应的结果")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nlink"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.baidu.com"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#obj=re.search(r'b(.*)',link)   <re.Match object; span=(4, 13), match='baidu.com'>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#obj=re.search(r'b(.+)',link)    <re.Match object; span=(4, 13), match='baidu.com'>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#obj=re.search(r'b(.*?)',link)   <re.Match object; span=(4, 5), match='b'>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#obj=re.search(r'b(.+?)',link)  <re.Match object; span=(4, 6), match='ba'>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#obj=re.search(r'$',link)       <re.Match object; span=(13, 13), match=''>")]),t._v("\nobj"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("re"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'^'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("link"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("re"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Match "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" span"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[t._v("贪婪模式和懒惰模式的对比：")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nstring"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11001230130"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#obj=re.match(r'(.*)30',string)  <re.Match object; span=(0, 11), match='11001230130'>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#obj=re.match(r'(.*?)30',string)    <re.Match object; span=(0, 8), match='11001230'>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("实现分组输出：")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1102231990xxxxxxxx'")]),t._v("\nres "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(?P<province>\\d{3})(?P<city>\\d{3})(?P<born_year>\\d{4})'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#{'province': '110', 'city': '223', 'born_year': '1990'}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groupdict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])])}),[],!1,null,null,null);e.default=s.exports}}]);